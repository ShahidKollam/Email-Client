name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-frontend-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Backend setup
      - name: Set up Node.js (backend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./EmailServer/package-lock.json

      - name: Install backend dependencies
        working-directory: ./EmailServer
        run: npm install

      - name: Run backend tests
        working-directory: ./EmailServer
        run: npm test

      # Frontend setup
      - name: Set up Node.js (frontend)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./EmailClient/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./EmailClient
        run: npm install

      - name: Build frontend
        working-directory: ./EmailClient
        run: npm run build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-frontend-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push images with only 'latest' tag
      - name: Build and push Docker images
        run: |
          docker compose build
          docker tag email-backend ${{ secrets.DOCKERHUB_USERNAME }}/email-backend:latest
          docker tag email-frontend ${{ secrets.DOCKERHUB_USERNAME }}/email-frontend:latest
          docker tag email-consumer ${{ secrets.DOCKERHUB_USERNAME }}/email-consumer:latest

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/email-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/email-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/email-consumer:latest
